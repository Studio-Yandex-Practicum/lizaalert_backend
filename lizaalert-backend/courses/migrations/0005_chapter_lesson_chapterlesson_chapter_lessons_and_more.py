# Generated by Django 4.0.6 on 2022-07-08 10:04

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('courses', '0004_course_level'),
    ]

    operations = [
        migrations.CreateModel(
            name='Chapter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=120, null=True, verbose_name='название главы')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='дата создания главы')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='дата изменения главы')),
            ],
            options={
                'verbose_name': 'глава',
                'verbose_name_plural': 'глава',
                'ordering': ('title',),
            },
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=120, verbose_name='название урока')),
                ('description', models.TextField(blank=True, null=True, verbose_name='описание урока')),
                ('lesson_type', models.CharField(blank=True, choices=[('Lesson', 'Урок'), ('Videolesson', 'Видеоурок'), ('Webinar', 'Вебинар'), ('Quizze', 'Тест')], max_length=20, null=True, verbose_name='тип урока')),
                ('tags', models.CharField(max_length=255, verbose_name='ключевые слова урока')),
                ('duration', models.PositiveSmallIntegerField(verbose_name='продолжительность урока')),
                ('ready', models.BooleanField(default=False, verbose_name='статус готовности')),
                ('visible', models.BooleanField(default=True, verbose_name='статус видимости урока')),
                ('published', models.BooleanField(default=False, verbose_name='статус публикации урока')),
                ('additional', models.BooleanField(default=False, verbose_name='дополнительный урок')),
                ('diploma', models.BooleanField(default=False, verbose_name='дипломный урок')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='дата создания урока')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='дата изменения урока')),
                ('user_created', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='lesson_creator', to=settings.AUTH_USER_MODEL, verbose_name='пользователь, создавший урок')),
                ('user_modifier', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='lesson_editor', to=settings.AUTH_USER_MODEL, verbose_name='пользователь, внёсший изменения в урок')),
            ],
            options={
                'verbose_name': 'урок',
                'verbose_name_plural': 'урок',
                'ordering': ('title',),
            },
        ),
        migrations.CreateModel(
            name='ChapterLesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_number', models.PositiveSmallIntegerField(unique=True, validators=[django.core.validators.MinValueValidator(1)], verbose_name='порядковый номер урока в главе')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='дата добавления урока в главу')),
                ('chapter', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='courses.chapter')),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='courses.lesson')),
            ],
            options={
                'ordering': ('order_number',),
                'unique_together': {('chapter', 'lesson')},
            },
        ),
        migrations.AddField(
            model_name='chapter',
            name='lessons',
            field=models.ManyToManyField(through='courses.ChapterLesson', to='courses.lesson', verbose_name='Уроки главы'),
        ),
        migrations.AddField(
            model_name='chapter',
            name='user_created',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='chapter_creator', to=settings.AUTH_USER_MODEL, verbose_name='пользователь, создавший главу'),
        ),
        migrations.AddField(
            model_name='chapter',
            name='user_modifier',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='chapter_editor', to=settings.AUTH_USER_MODEL, verbose_name='пользователь, внёсший изменения в главу'),
        ),
    ]
