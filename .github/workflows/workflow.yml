name: Code Style Checks & Tests
on:
  push
    # now it will work with all branch
    # branches:
    #  - master
    #  - dev
  # not for pull request actions only for push
  # pull_request:

jobs:
  linting:
    name: Check
    runs-on: ubuntu-latest
    steps:
      #----------------------------------------------
      #       check-out repo and set-up python
      #----------------------------------------------
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      #----------------------------------------------
      #  -----  install & configure poetry  -----
      #----------------------------------------------
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      #----------------------------------------------
      #       load cached venv if cache exists
      #----------------------------------------------
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: src/.venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/src/poetry.lock') }}
      #----------------------------------------------
      # install dependencies if cache does not exist
      #----------------------------------------------
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: cd src && poetry install --no-interaction --no-root
      #----------------------------------------------
      # install your root project, if required
      #----------------------------------------------
      - name: Install project
        run: cd src && poetry install --no-interaction
      #----------------------------------------------
      #              run checks
      #----------------------------------------------
      - name: Flake8 check
        run: cd src && poetry run flake8 .

      - name: Isort check
        run: cd src && poetry run isort --check-only --skip-gitignore .

      - name: Black check
        run: cd src && poetry run black --check .

      #----------------------------------------------
      #              run checks
      #----------------------------------------------
      - name: Set up environment variable for tests 
        run: echo "IS_GITHUB_ACTION=true" >> $GITHUB_ENV
      - name: Run tests
        run: cd src && poetry run pytest


  # test:
  #   name: Test
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repo
  #       uses: actions/checkout@v3
  #     - name: Prepare envs
  #       run: |
  #         cp .env.sample .env
  #         cp services/postgres/.env.sample services/postgres/.env

  #     - uses: isbang/compose-action@v1.4.1
  #       with:
  #         compose-file: "./docker-compose.yml"

  #     - name: Build and run app
  #       run: |
  #         docker-compose up -d
  #         sleep 20

  #     - name: Run tests
  #       run: docker-compose exec -T backend pytest tests/
