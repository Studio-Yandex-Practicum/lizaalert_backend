# Generated by Django 3.2.20 on 2024-01-26 11:29

import sys
from django.db import migrations, models
import django.db.models.deletion


STORAGE = dict()


def collect_users(apps, schema_editor):
    course = apps.get_model('courses', 'CourseProgressStatus')
    lesson = apps.get_model('courses', 'LessonProgressStatus')
    chapter = apps.get_model('courses', 'ChapterProgressStatus')
    for model in [course, lesson, chapter]:
        STORAGE[model] = dict()
        for obj in model.objects.all():
            STORAGE[model][obj.id] = obj.user


def populate_subscription(apps, schema_editor):
    CourseProgressStatus = apps.get_model('courses', 'CourseProgressStatus')
    LessonProgressStatus = apps.get_model('courses', 'LessonProgressStatus')
    ChapterProgressStatus = apps.get_model('courses', 'ChapterProgressStatus')
    Subscription = apps.get_model('courses', 'Subscription')

    def get_course_for_course(course_progress):
        return course_progress.course

    def get_course_for_lesson(lesson_progress):
        return lesson_progress.lesson.chapter.course

    def get_course_for_chapter(chapter_progress):
        return chapter_progress.chapter.course

    for model, get_course_func in [
        (CourseProgressStatus, get_course_for_course),
        (LessonProgressStatus, get_course_for_lesson),
        (ChapterProgressStatus, get_course_for_chapter)
    ]:
        for obj in model.objects.all():
            course = get_course_func(obj)
            try:
                subscription = Subscription.objects.get(user=STORAGE[model][obj.id], course=course)
                obj.subscription = subscription
                obj.save()
            except Subscription.DoesNotExist as e:
                sys.stderr.write(str(e) + "\n")


class Migration(migrations.Migration):

    dependencies = [
        ('courses', '0018_auto_20240119_1504'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='chapterprogressstatus',
            options={'ordering': ('subscription',), 'verbose_name': 'Прогресс по главе', 'verbose_name_plural': 'Прогресс по главам'},
        ),
        migrations.AlterModelOptions(
            name='courseprogressstatus',
            options={'ordering': ('subscription',), 'verbose_name': 'Прогресс по курсу', 'verbose_name_plural': 'Прогресс по курсам'},
        ),
        migrations.AlterModelOptions(
            name='lessonprogressstatus',
            options={'ordering': ('subscription',), 'verbose_name': 'Прогресс по уроку', 'verbose_name_plural': 'Прогресс по урокам'},
        ),
        migrations.RemoveField(
            model_name='chapterprogressstatus',
            name='user',
        ),
        migrations.RemoveField(
            model_name='courseprogressstatus',
            name='user',
        ),
        migrations.RemoveField(
            model_name='lessonprogressstatus',
            name='user',
        ),
        migrations.AddField(
            model_name='chapterprogressstatus',
            name='subscription',
            field=models.ForeignKey(default=58, on_delete=django.db.models.deletion.CASCADE, related_name='chapter_progress', to='courses.subscription', verbose_name='Подписка'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='courseprogressstatus',
            name='subscription',
            field=models.ForeignKey(default=58, on_delete=django.db.models.deletion.CASCADE, related_name='course_progress', to='courses.subscription', verbose_name='Подписка'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='lessonprogressstatus',
            name='subscription',
            field=models.ForeignKey(default=58, on_delete=django.db.models.deletion.CASCADE, related_name='lesson_progress', to='courses.subscription', verbose_name='Подписка'),
            preserve_default=False,
        ),
    ]
