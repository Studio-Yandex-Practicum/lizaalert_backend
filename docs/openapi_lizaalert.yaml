openapi: 3.0.1
info:
  title: Платформа для обучения добровольцев "ЛизаАлерт"
  description: 'Описание контракта API платформы для обучения добровольцев "ЛизаАлерт"'
  termsOfService: https://swagger.io/terms/
  contact:
    name: Developer Team
    email: ""
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
- url: https://liza-alert.ru/api/v1

tags:
- name: account
  description: API регистрации и работе с личным кабинетом (профилем)
- name: admin
  description: API администратора для управления ролями и доступами пользователей
- name: course
  description: API по работе с конструктором курсов
- name: quizzes
  description: API по работе с конструктором тестов (квизов)

paths:
  /signup:
    post:
      tags:
      - account
      summary: Регистрация пользователя
      operationId: signupUser
      description: Выполняется проверка на уже созданного пользователя и в случае отсутствия регистрируется новый пользователь
      requestBody:
        description: 'Телефон, e-mail и пароль являются обязательными параметрами.
                      Длина пароля не менее 8 символов.'
        content:
          application/json:
            schema:
              type: object
              properties:
                full_name:
                  type: string
                  description: ФИО волонтера
                birth_date:
                  type: string
                  format: date
                  description: Дата рождения
                location:
                  type: string
                  description: Географический регион
                call_sign:
                  type: string
                  description: Пароль
                phone_number:
                  type: string
                  description: Номер телефона
                email:
                  type: string
                  format: email
                  description: Электронная почта
                password:
                  type: string
                  format: password
                  minLength: 8
                  description: Пароль
              required:
                - phone_number
                - email
                - password
      x-codegen-request-body-name: body
      responses:
        201:
          description: Пользователь создан
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                    description: Уникальный идентификатор пользователя
                  phone_number:
                    type: string
                    description: Номер телефона пользователя
                    example: "+71234567899"
                  email:
                    type: string
                    format: email
                    description: Адрес электронной почты пользователя
                  full_name:
                    type: string
                    description: Имя пользователя
                    example: Иванова Анна Сидоровна
                  birth_date:
                    type: string
                    format: date
                    description: Дата рождения
                    example: 01-10-1995
                  location:
                    type: string
                    description: Географический регион
                    example: г. Санкт-Петербург
                  call_sign:
                    type: string
                    description: Позывной на форуме
                    example: Белка
                  is_active:
                    type: boolean
                    description: Статус учетной записи
                  is_confirmed:
                    type: boolean
                    description: Статус подтверждения учетной записи
                  created_at:
                    type: string
                    format: date-time
                    description: Дата создания учетной записи
        400:
          description: Отсутствует обязательное поле или недостаточная длина пароля
          $ref: '#/components/responses/BadRequest'
        409:
          description: Пользователь с таким адресом электронной почты или номером телефона уже существует!
          $ref: '#/components/responses/Conflict'

  /profile/login:
    post:
      tags:
      - account
      summary: Авторизация пользователя в системе
      description: Авторизация происходит по email/пароль или access-токену
      operationId: loginUser
      security:
        - bearerAuth: [ ]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                  description: Логин (телефон) пользователя
                password:
                  type: string
                  format: password
                  description: Пароль
                  minLength: 8
              required:
                - login
                - password
      x-codegen-request-body-name: body
      responses:
        200:
          description: Авторизация успешна.
          headers:
            X-Rate-Limit:
              description: допустимое количество подключений в час
              schema:
                type: integer
                format: int32
            X-Expires-After:
              description: дата и время истечения токена в UTC
              schema:
                type: string
                format: date-time
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                  refresh_token:
                    type: string
        401:
          description: Неверное имя пользователя или пароль
          $ref: '#/components/responses/Unauthorized'

  /profile/logout:
    post:
      tags:
      - account
      summary: Выход из пользовательской сессии
      description: ''
      operationId: logoutUser
      security:
        - bearerAuth: []
      responses:
        default:
          description: 'Вы вышли из аккаунта'
        401:
          description: Пользователь не авторизован!
          $ref: '#/components/responses/Unauthorized'

  /profile/token/refresh:
    post:
      tags:
      - account
      summary: Получение новой пары токенов в обмен на refresh-токен
      description: ''
      operationId: refreshToken
      security:
        - bearerAuth: []
      responses:
        200:
          description: successful operation
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
            X-Expires-After:
              description: date in UTC when token expires
              schema:
                type: string
                format: date-time
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                  refresh_token:
                    type: string
        401:
          description: Пользователь не авторизован или недействительный refresh-токен!
          $ref: '#/components/responses/Unauthorized'

  /profile/password_change:
    patch:
      tags:
      - account
      summary: 'Смена пароля пользователем'
      description: ''
      operationId: updateUserPassword
      security:
        - bearerAuth: []
      requestBody:
        description: 'Проверяется соответствие старого пароля текущему и при успешном сравнении
                       сохраняется новый пароль и осуществляется logout пользователя.'
        content:
          application/json:
            schema:
              type: object
              properties:
                old_password:
                  type: string
                  format: password
                  description: Старый пароль
                  minLength: 8
                new_password:
                  type: string
                  format: password
                  description: Новый пароль
                  minLength: 8
              required:
                - old_password
                - new_password
      x-codegen-request-body-name: body
      responses:
        default:
          description: 'Пароль успешно сменен. Авторизуйтесь повторно с новым паролем.'
        400:
          description: Отсутствует обязательное поле или недостаточная длина пароля
          $ref: '#/components/responses/BadRequest'
        401:
          description: Пользователь не авторизован!
          $ref: '#/components/responses/Unauthorized'
        409:
          description: Введен неверный старый пароль. Попробуйте еще раз.
          $ref: '#/components/responses/Conflict'

  /profile/{user_id}
    parameters:
      - in: path
        name: user_id
        description: Уникальный идентификатор пользователя
        required: true
        schema:
          type: string
          format: uuid
    get:
      tags:
      - account
      summary: Доступ к странице профиля пользователя
      operationId: getUserProfile
      description: Предоставляется информация для отображения профиля пользователя
      security:
        - bearerAuth: []
      responses:
        200:
          description: Успешная операция
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                    description: Уникальный идентификатор пользователя
                  phone_number:
                    type: string
                    description: Номер телефона пользователя
                    example: "+71234567899"
                  email:
                    type: string
                    format: email
                    description: Адрес электронной почты пользователя
                  full_name:
                    type: string
                    description: Имя пользователя
                    example: Иванова Анна Сидоровна
                  birth_date:
                    type: string
                    format: date
                    description: Дата рождения
                    example: 01-10-1995
                  location:
                    type: string
                    description: Географический регион
                    example: г. Санкт-Петербург
                  call_sign:
                    type: string
                    description: Позывной на форуме
                    example: Белка
                  photo:
                    type: string
                    format: uri
                    description: Ссылка на фотографию
                  thumbnail:
                    type: string
                    format: uri
                    description: Ссылка на миниатюру фотографии
                  level:
                    type: string
                    description: Уровень волонтера (Новичок, Бывалый, Профессонал)
                  badges:
                    type: array
                    items:
                      type: string
                  count_pass_course:
                    type: integer
                    description: Количество пройденных курсов
                  is_active:
                    type: boolean
                    description: Статус учетной записи
                  is_confirmed:
                    type: boolean
                    description: Статус подтверждения учетной записи
        404:
          description: Пользователь не найден
          $ref: '#/components/responses/NotFound'
        401:
          description: Пользователь не авторизован!
          $ref: '#/components/responses/Unauthorized'

    patch:
      tags:
      - account
      summary: Изменение личных данных
      operationId: updateUserProfiles
      description: Выполняется сохранение обновленных личных данных
      security:
        - bearerAuth: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: object
              properties:
                full_name:
                  type: string
                  description: ФИО волонтера
                birth_date:
                  type: string
                  format: date
                  description: Дата рождения
                location:
                  type: string
                  description: Географический регион
                call_sign:
                  type: string
                  description: Пароль
                photo:  # Уточнить тип данных для файла фотографии
                  type: string
                  format: binary
                  description: Файл фото
      x-codegen-request-body-name: body
      responses:
        200:
          description: Успешная операция
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                    description: Уникальный идентификатор пользователя
                  phone_number:
                    type: string
                    description: Номер телефона пользователя
                    example: "+71234567899"
                  email:
                    type: string
                    format: email
                    description: Адрес электронной почты пользователя
                  full_name:
                    type: string
                    description: Имя пользователя
                    example: Иванова Анна Сидоровна
                  birth_date:
                    type: string
                    format: date
                    description: Дата рождения
                    example: 01-10-1995
                  location:
                    type: string
                    description: Географический регион
                    example: г. Санкт-Петербург
                  call_sign:
                    type: string
                    description: Позывной на форуме
                    example: Белка
                  photo:
                    type: string
                    format: uri
                    description: Ссылка на фотографию
                  thumbnail:
                    type: string
                    format: uri
                    description: Ссылка на миниатюру фотографии
                  level:
                    type: string
                    description: Уровень волонтера (Новичок, Бывалый, Профессонал)
                  badges:
                    type: array
                    items:
                      type: string
                  count_pass_course:
                    type: integer
                    description: Количество пройденных курсов
                  is_active:
                    type: boolean
                    description: Статус учетной записи
                  is_confirmed:
                    type: boolean
                    description: Статус подтверждения учетной записи
        400:
          description: Неверный формат полей запроса
          $ref: '#/components/responses/BadRequest'
        404:
          description: Пользователь не найден
          $ref: '#/components/responses/NotFound'
        401:
          description: Пользователь не авторизован!
          $ref: '#/components/responses/Unauthorized'

  /profile/history: # В мекете не предусмотрено, но возможность вывода истории входов в аккаунт есть
    get:
      tags:
      - account
      summary: Получение истории посещений
      description: ''
      operationId: userHistory
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: page
          description: Номер страницы
          schema:
            type: integer
        - in: query
          name: per_page
          description: Количество записей на странице
          schema:
            type: integer
      responses:
        200:
          description: Успешная операция
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: Общее количество записей
                  total_pages:
                    type: integer
                    description: Общее количество страниц
                  prev:
                    type: integer
                    nullable: true
                    description: Номер предыдущей страницы
                  next:
                    type: integer
                    nullable: true
                    description: Номер следующей страницы
                  results:
                    type: array
                    items:
                      type: object
                      properties:
                        login:
                          type: string
                          description: Логин пользователя
                          example: "+71234567899"
                        timestamp:
                          type: string
                          format: date-time
                          description: Время входа
                        user_agent:
                          type: string
                          description: Пользовательский агент (браузер)
                        ip_addr:
                          type: string
                          oneOf:
                            - format: ipv4
                            - format: ipv6
                        device:
                          type: string
                          description: Устройство
                        platform:
                          type: string
                          description: Операционная система
        401:
          description: Пользователь не авторизован!
          $ref: '#/components/responses/Unauthorized'

# Требуется уточние необходимости реализации эндпоинтов администратора для управления пользователя и их ролями на первом этапе
# Первоначально для администрирования достаточно встроенной админки Django
  /admin/roles:
    get:
      tags:
      - admin
      summary: Просмотр всех ролей
      description: Получает список всех ролей пользователей в системе
      operationId: getRoles
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: page
          description: Номер страницы
          schema:
            type: integer
        - in: query
          name: per_page
          description: Количество записей на странице
          schema:
            type: integer
      responses:
        200:
          description: Успешная операция
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: Общее количество объектов
                    example: 100
                  total_pages:
                    type: integer
                    description: Общее количество страниц
                    example: 5
                  prev:
                    type: integer
                    nullable: true
                    description: Номер предыдущей страницы
                    example: null
                  next:
                    type: integer
                    nullable: true
                    description: Номер следующей страницы
                    example: 2
                  results:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                          description: Уникальный идентификатор роли
                        name:
                          type: string
                          description: Имя роли
                        description:
                          type: string
                          description: Описание роли
                        is_active:
                          type: boolean
                          description: Статус доступности роли (доступна / недоступна)
        403:
          description: Недостаточно прав. Доступ запрещен.
          $ref: '#/components/responses/Forbidden'

    post:
      tags:
      - admin
      summary: Создание роли
      description: Проверяет, существует ли роль и при отсутствии создает новую роль
      operationId: createRole
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Имя роли
                description:
                  type: string
                  description: Описание роли
              required:
                - name
                - description
      x-codegen-request-body-name: body
      responses:
        201:
          description: Роль создана
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                    description: Уникальный идентификатор роли
                  name:
                    type: string
                    description: Имя роли
                  description:
                    type: string
                    description: Описание роли
                  is_active:
                    type: boolean
                    description: Статус доступности роли (доступна / недоступна)
        400:
          description: Отсутствует обязательное поле
          $ref: '#/components/responses/BadRequest'
        409:
          description: Роль с таким именем уже существует!
          $ref: '#/components/responses/Conflict'
        403:
          description: Недостаточно прав или системная роль. Доступ запрещен.
          $ref: '#/components/responses/Forbidden'

  /admin/roles/{role_id}:
    parameters:
      - in: path
        name: role_id
        description: Уникальный идентификатор роли
        required: true
        schema:
          type: string
          format: uuid
    patch:
      tags:
      - admin
      summary: Изменение роли
      description: Внесение изменений в имя или описание роли
      operationId: updateRole
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Имя роли
                description:
                  type: string
                  description: Описание роли
              required:
                - name
                - description
      responses:
        200:
          description: Успешная операция
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                    description: Уникальный идентификатор роли
                  name:
                    type: string
                    description: Имя роли
                  description:
                    type: string
                    description: Описание роли
                  is_active:
                    type: boolean
                    description: Статус доступности роли (доступна / недоступна)
        403:
          description: Недостаточно прав или системная роль. Доступ запрещен.
          $ref: '#/components/responses/Forbidden'
        404:
          description: Отказано! Роль не может быть удалена!
          $ref: '#/components/responses/NotFound'
        409:
          description: Роль с таким именем уже существует!
          $ref: '#/components/responses/Conflict'
      x-codegen-request-body-name: body

    delete:
      tags:
      - admin
      summary: Удаление роли
      description: Удаление роли из базы данных
      operationId: Role
      security:
        - bearerAuth: []
      responses:
        204:
          description: No  content
          content: {}
        403:
          description: Недостаточно прав или системная роль. Доступ запрещен.
          $ref: '#/components/responses/Forbidden'
        404:
          description: Роль не найдена
          $ref: '#/components/responses/NotFound'

  /admin/users/{user_id}/roles:
    get:
      tags:
      - admin
      summary: Список ролей пользователя
      description: Отображает список ролей назначенных для пользователя
      operationId: getRoleUser
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: user_id
          description: Уникальный идентификатор пользователя
          required: true
          schema:
            type: string
            format: uuid
        - in: query
          name: page
          description: Номер страницы
          schema:
            type: integer
        - in: query
          name: per_page
          description: Количество записей на странице
          schema:
            type: integer
      responses:
        200:
          description: Успешная операция
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: Общее количество записей
                    example: 100
                  total_pages:
                    type: integer
                    description: Общее количество страниц
                    example: 5
                  prev:
                    type: integer
                    nullable: true
                    description: Номер предыдущей страницы
                    example: null
                  next:
                    type: integer
                    nullable: true
                    description: Номер следующей страницы
                    example: 2
                  results:
                    type: array
                    description: Список ролей пользователя
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                          description: Уникальный идентификатор роли
                        name:
                          type: string
                          description: Имя роли
                        description:
                          type: string
                          description: Описание роли
                        is_active:
                          type: boolean
                          description: Статус доступности роли (доступна / недоступна)
        404:
          description: Пользователь не найден
          $ref: '#/components/responses/NotFound'
        403:
          description: Недостаточно прав. Доступ запрещен.
          $ref: '#/components/responses/Forbidden'
    put: #уточнить, возможно лучше использовать post
      tags:
      - admin
      summary: Назначить пользователю роль (добавить в группу роли)
      description: Назначает пользователю роль (добавляет пользователя в группу роли)
      operationId: setRoleUser
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: user_id
          description: Уникальный идентификатор пользователя
          required: true
          schema:
            type: string
            format: uuid
        - in: path
          name: role_id
          description: Уникальный идентификатор роли
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: OK
          $ref: '#/components/responses/minimalResponse'
        204:
          description: Такая роль уже есть у пользователя
          content: {}
        404:
          description: Роль или пользователь не найдены
          $ref: '#/components/responses/NotFound'
        403:
          description: Недостаточно прав. Доступ запрещен.
          $ref: '#/components/responses/Forbidden'

    delete:
      tags:
      - admin
      summary: Аннулировать пользователю роль (удалить из группы роли)
      description: Аннулирует пользователю роль (удаляет пользователя в группу роли)
      operationId: revokeRoleUser
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: user_id
          description: Уникальный идентификатор пользователя
          required: true
          schema:
            type: string
            format: uuid
        - in: path
          name: role_id
          description: Уникальный идентификатор роли
          required: true
          schema:
            type: string
            format: uuid
      responses:
        204:
          description: No  content
          content: {}
        404:
          description: Роль или пользователь не найдены
          $ref: '#/components/responses/NotFound'
        403:
          description: Недостаточно прав. Доступ запрещен.
          $ref: '#/components/responses/Forbidden'

components:
  schemas:

    Error: #Требуется уточнить состав и объем полей описания ошибки, отдаваемой в фронтенд
      type: object
      properties:
        errors:
          type: string
        message:
          type: string
      required:
        - errors
        - message

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  responses:
    minimalResponse:
      description: "OK"

    NotFound:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"

    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"

    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"

    Conflict:
      description: Resource Already Exist
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"

    FailedDependency:
      description: Failed Dependency
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"

    Forbidden:
      description: Resource modification is prohibited
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"